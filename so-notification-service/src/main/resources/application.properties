#---------------------------env specific configuration below-----------------------
secure.service=true
#secure.service=false
domain.baseurl=http://192.168.1.15
service.hostname=192.168.1.15
db.hostname=192.168.1.15
db.port=3308
db.dbName=smart_office_dev
db.username=so_user
db.password=gearup123

kafka.broker.url=192.168.1.15:9092
mq.host=localhost
mq.port=5672
mq.username=admin	
mq.password=admin
mq.virtual-host=smartoffice




spring.mail.username=dinesh.retnaswamy@gmail.com
spring.mail.password=bmsbjlwiudgjvjjo
# spring.mail.username=ppssmartoffice@gmail.com
# spring.mail.password=Admin@123
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
 spring.mail.properties.mail.smtp.starttls.enable=true

spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

docs.base.location=/opt/so/data/docs
docs.email.template.location = ${docs.base.location}/email-templates/html
docs.uploadfolder.name=upload
docs.folder.delimitter=/
pdf.location=/opt/so/data/pdf/

spring.application.name=so-notification-service
eureka.client.serviceUrl.defaultZone=http://192.168.1.15:8761/eureka/
eureka.instance.preferIpAddress=true
spring.cloud.inetutils.preferredNetworks=192.168.1.15

spring.datasource.hikari.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=300000
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=600000 
spring.datasource.hikari.max-lifetime=2800000 
logging.level.com.zaxxer.hikari=debug 
spring.datasource.hikari.auto-commit=true


#---------------------------project specific configuration below-----------------------
payroll.url=http://${service.hostname}:6005/so-service/transaction/payroll/
employee.url=http://${service.hostname}:6005/so-service/master/employees/
employees.url=http://${service.hostname}:6005/so-service/master/employees/_internal/
middle-manager.url=http://${service.hostname}:6005/so-service/master/employees/middle-management
high-manager.url=http://${service.hostname}:6005/so-service/master/employees/senior-management
applicant.url=http://${service.hostname}:6005/so-service/transaction/recruitments/applicants/
customer.url=http://${service.hostname}:6005/so-service/master/clients/_internal
saleOrder.url=http://${service.hostname}:6005/so-service/transaction/sale-orders/_internal
client.url=http://${service.hostname}:6005/so-service/master/clients/_internal/
announcement.url=http://${service.hostname}:6005/so-service/transaction/announcements/
payout.url=http://${service.hostname}:6005/so-service/transaction/pay/memployee-payouts/_internal/
user.url=http://${service.hostname}:6002/so-auth-service/auth/users/_internal
sms.url=https://api.textlocal.in/send/?
sms-sender-name=TXTLCL
sms-api-key=2bBuACJnFCU-Sp3OkBDUGcFM8vxUXqbrVxHRPqjbnZ 
smartoffice.url=${domain.baseurl}/smart-office/
podhigai.url=${domain.baseurl}/smart-office/
usergropsemployee.url=http://${service.hostname}:6005/so-service/master/user-group-emp-mappings/userGroupId/
auth-menu.url=http://${service.hostname}:6002/so-auth-service/menu/
document.url=http://${service.hostname}:6004/so-document-service/documents/doc-mgmt/upload-payslip/_internal/
updatepayout.url=http://${service.hostname}:6005/so-service/transaction/pay/memployee-payouts/update/_internal/
authuserbyempid.url=http://${service.hostname}:6002/so-auth-service/auth/users/getByEmpId/
authrolefeature.url=http://${service.hostname}:6002/so-auth-service/auth/roles-features/by-authrole-id/
authfeaturebyid.url=http://${service.hostname}:6002/so-auth-service/auth/features/
usergroup.url=http://${service.hostname}:6005/so-service/master/user-group-emp-mappings/get-user-group/
#ordercreationevent.recepitent.ids=
#ordercreationevent.mgmt.ids=
#applicant
payslip.pdf.location=${pdf.location}/applicant/
#---------------------------spring configuration below-----------------------
spring.kafka.bootstrap-servers={kafka.broker.url}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.jdbc.batch_size=5
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.generate_statistics=false

spring.datasource.url=jdbc:mysql://${db.hostname}:${db.port}/${db.dbName}?noAccessToProcedureBodies=true
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


spring.data.rest.basePath=/repo/
spring.data.rest.defaultMediaType=application/json
spring.rabbitmq.host=${mq.host}
spring.rabbitmq.port=${mq.port}
spring.rabbitmq.dynamic=true
spring.rabbitmq.username=${mq.username}	
spring.rabbitmq.password=${mq.password}
spring.rabbitmq.virtual-host=${mq.virtual-host}
spring.jmx.enabled=false
spring.thymeleaf.check-template-location=false
 
#notification expiry duration
notfn.expiry.duration=10

#server port
server.port=6003
server.servlet.contextPath=/so-notification-service
#in spring-boot greater than 2.0, we might have to use server.servlet.context-path

#logging location
logging.path=/opt/so/log/so-notification-service/

#enable remote shutdown
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

#enable http trace to view previous requests
management.endpoint.httptrace.enabled=true

#map box api key for geolocation helper in so-shared
map-box-api-key=pk.eyJ1IjoiZGluZXNociIsImEiOiJjanBqcTJjYmIwOWlnM3JvbTduamNuenE3In0.XxPjxeCOlw-JyeVPN6XQaQ

